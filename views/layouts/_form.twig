{% set p = prefix | default('id-') %}
{% set formId = form.id |default(p~'form') %}

<form class="form-horizontal cls-{{ util.formId(form) }}" method="post" action="{% if form.action %}{{form.action}}{% else %}{{ App.request.url }}{% endif %}" {% if this.model.isNewRecord %}{% if sub.onCreateUrl %}action="{{sub.onCreateUrl}}"{% elseif sub.onEditUrl %}action="{{sub.onEditUrl}}"{% endif %}{% endif %}  id="{{ formId }}" accept-charset="UTF-8">
	<fieldset>
{# bootstrap3 		
		{% if form.title != '' %}
			<h5 class="short_headline"><span>{{ form.title |raw}}</span></h5>
		{% endif %}
#}
		{% if form.controlWidth %}{% set width=form.controlWidth %}{% else %}{% set width= element.width | default('input-xlarge') %}{% endif %}
		{% for groupKey, groupElement in form.elements %}			
		{% if groupElement.hidden != true and groupElement.formHidden != true %}
		<div id="{{ p }}group-{{ groupKey}}" class="control-group form-group{% if this.model.getErrors(groupKey) %} error has-error{% endif %}">
			{% if groupElement.type != 'checkbox' and groupElement.type != 'hidden' and groupElement.hideLabel != true %}
			<label for="{{ p }}{{ groupKey }}" class="control-label col-lg-2 no-left-padding {% if this.hasTooltip(groupKey) %} showtip" data-toggle="tooltip" data-placement="right" data-trigger="hover" data-original-title="{{ this.tooltip(groupKey) }}{% endif %}" >{% if groupElement.label %}{{ groupElement.label}}{% else %}{{ this.model.attributeLabel(groupKey) }}{% endif %}&nbsp;</label> 
			{% endif %}
			
			<div class="controls {% if groupElement.hideLabel != true %}col-lg-10{%else%}col-lg-12{%endif%}">
				{% if groupElement.elements | length > 0 %}
					{% set fields = (groupElement.elements) %}
				{% else %}
					{% set fields = { (groupKey) : groupElement } %} {# must in () otherwise it's an string #}
				{% endif %}	
				{#
				{% set key = groupKey %}
				{% set element = groupElement %}
				#}
				{% for key, element in fields %}	
				{% if form.controlWidth %}{% set width=form.controlWidth %}{% else %}{% set width= element.width | default('input-xlarge') %}{% endif %}

				{% if element.width %}
				<div class="row">	
					<div class="{{ element.width }}">
				{% endif %}	
							
				{% if element.type == 'dropdown' or element.type == 'vat' or element.type=='chosen' %}							
				  {% if element.type == 'vat' %}
					<div class="input-prepend span4">
						<span class="add-on">%</span>
					{% elseif element.type == 'chosen' %}
						{{ this.registerPackage('chosen', {'isAjax' : isAjax}) }}
						{# needs an empty field, because field is remove if no value is selected, so changes to nothing would not be saved #}
						<input id="{{ p }} {{ key }}-val" type="hidden" name="{{ form.model }}[{{key}}][]" />
					{% endif %}	
						<select id="{{ p }}{{ key }}" name="{{ form.model }}[{{key}}]{% if element.multi %}[]{% endif %}" class="{{ elementwidth }} {{ element.class }} form-control{% if element.type=='chosen' %} chosen-select{% endif %}" {% if element.placeholder %}data-placeholder="{{ element.placeholder }}"{%endif %}{% if element.multi %} multiple{% endif %} >
					{% for itemKey, itemCaption in element.items %}								
							<option value="{{ itemKey }}" {% if this.model.__get(key) | length > 0 %}{% if itemKey in this.model.__get(key) %}selected="1"{% endif %}{% else %}{% if itemKey == this.model.__get(key) %}selected="1"{% endif %} {% endif %} >{{ itemCaption }}</option>
					{% endfor %}
						</select>
					{% if element.type == 'vat' %}
					</div>	
					{% endif %}
				{% elseif element.type == 'radiobuttonlist' %}	
						<input id="{{ p }}{{ key }}" type="hidden" name="{{ form.model }}[{{ key }}]" value="">
						<span id="{{ form.model }}_{{ key }}">
							{% for itemKey, itemCaption in element.items %}
								<input id="{{ p }}{{key}}-{{ loop.index0 }}" type="radio" class="{{ p }}{{key }}" name="{{ form.model }}[{{ key }}]" value="{{ itemKey }}">
								<label for="{{ p }}{{key}}-{{ loop.index0 }}" style="display:inline-block;padding-right:8px;margin-top:3px;">{{ itemCaption }}</label>		
							{% endfor %}
						</span>	
					{# html.activeRadioButtonList((this.model), key, element.items , {'labelOptions': {'style':'display:inline-block;padding-right:8px;margin-top:3px;'}, 'separator' : ' ', 'id':'-'~key}) |raw #} 
				{% elseif element.type == 'textarea' %}
					<textarea id="{{ p }}{{ key }}" name="{{ form.model }}[{{key}}]" class="{% if element.class %}{{ element.class }} {%else%}{{ width }}{%endif%} form-control" rows="{% if element.rows %}{{ element.rows }}{% else %}5{% endif %}">{{ this.model.__get(key) }}</textarea>
					{{ this.registerPackage('elastic', {'isAjax' : isAjax }) }}
				{% elseif element.type == 'checkbox' %}	
					{# http://stackoverflow.com/questions/1809494/post-the-checkboxes-that-are-unchecked #}
					<label class="checkbox"><input type="hidden" name="{{ form.model }}[{{key}}]" value="0" /><input id="{{ p }}{{ key }}" name="{{ form.model }}[{{key}}]" type="checkbox" {% if this.model.__get(key) %}checked="1"{% endif %} value="1"/>{% if groupElement.label %}{{ groupElement.label}}{% else %}{{ this.model.attributeLabel(groupKey) }}{% endif %}</label>
				{% elseif element.type== 'image' %}
					{{ this.form.image(this.model, key) | raw }}								
				{% elseif element.type== 'finder' %}
					{{ this.form.finder(this.model, key) | raw }}
				{% elseif element.type== 'html2' %}						
					{{ this.htmlEditor(this.model, key) | raw}}												
				{% elseif element.type=='html' %}
					{{ this.registerPackage('tinymce',{'isAjax' : isAjax}) }}	
					<textarea id="{{ p }}{{ key }}" name="{{ form.model }}[{{key}}]" class="tinymce form-control {% if element.class %}{{ element.class }} {%else%}{{ width }}{%endif%}" rows="{% if element.rows %}{{ element.rows }}{% else %}5{% endif %}">{{ this.model.__get(key) }}</textarea>
				{% elseif element.type=='code' %}
					{{ this.registerPackage('code',{'isAjax' : isAjax}) }}
					{% if element.sourceType == 'html' %}
						{{ this.registerPackage('code-html',{'isAjax' : isAjax}) }}
					{% endif %}	
					<textarea id="{{ p }}{{ key }}" name="{{ form.model }}[{{key}}]" class="code-{{ element.sourceType | default('html') }} form-control {% if element.class %}{{ element.class }} {%else%}{{ width }}{%endif%}" rows="{% if element.rows %}{{ element.rows }}{% else %}5{% endif %}">{{ this.model.__get(key) }}</textarea>
				{% elseif element.type=='mask' %}
					<input id="{{ p }}{{ key }}" name="{{ form.model }}[{{key}}]" type="text" class="{{ width }} form-control" value="{{ this.model.__get(key) }}" {% if fields | length > 1 %} placeholder="{% if element.label %}{{ element.label}}{% else %}{{ this.model.attributeLabel(key) }}{% endif %}"{% endif %} maxlength="{{element.maxLength}} | default(255)"/> 				
					{{ this.registerPackage('inputmask',{'isAjax' : isAjax , 'executeAfterLoad': 	
						'$("#'~p~key~'").inputmask({"mask": "'~element.mask~'"})'}) }}
				{% elseif element.type=='date' %}						
					<div class="input-prepend date">						
						<input id="{{ p }}{{ key }}" name="{{ form.model }}[{{key}}]" size="16" type="date" value="{{ this.model.__get(key) }}" class=" form-control input-date" data-date-format="{{ format.dateFormat() | raw }}" {% if element.calendarWeeks %}data-date-calendar-weeks="true"{% endif %}>						
					</div>	
					{{ this.registerPackage('datepicker', {'isAjax' : isAjax, 'executeAfterLoad':
"$('.input-date').datepicker({" ~		
	"language : '"~App.clientConfig.language~"',
	autoclose: true
});
"}) }}
				{% elseif element.type=='hidden' %}
					<input type="hidden" id="{{ p }}{{ key }}" name="{{ form.model }}[{{key}}]" value="{{ this.model.__get(key) }}" />	
				{% elseif element.type== 'view' %}
					{{ this.renderPartial(element.view, {'model': this.model.__get(key)}) |raw }}
				{% elseif element.type== 'password' %}
					<input id="{{ p }}{{ key }}" name="{{ form.model }}[{{key}}]" type="password" class="{{ width }} form-control" value="{{ this.model.__get(key) }}"/> 
				{% elseif element.type=='typeahead' %}
					
					<input id="{{ p }}input-{{ key }}" type="text" class="{{ width }}" value="{{ element.caption }}"/>
					<input id="{{ p }}{{ key }}" name="{{ form.model }}[{{key}}]" type="hidden" value="{{ this.model.__get(key) }}">
	{{ this.registerPackage('typeahead', {'isAjax' : isAjax,'executeAfterLoad' : "
  s = '#"~p~"input-"~ key ~"';
	$(s).typeahead({
		name:'search-"~ key ~"',
		remote:'" ~ element.url ~ "%QUERY'
	});
	$(s).on('typeahead:selected typeahead:autocompleted', function(e,datum) {
		$('#"~ p ~ key ~"').val(datum.id);
	});
"}) }}
					
					{# this.registerScript(
							form.model ~ '-' ~ key,"
$().ready(function() {
  s = '#"~p~"input-"~ key ~"';
	$(s).typeahead({
		name:'search-"~ key ~"',
		remote:'" ~ element.url ~ "%QUERY'
	});
	$(s).on('typeahead:selected typeahead:autocompleted', function(e,datum) {
		$('#"~ p ~ key ~"').val(datum.id);
	});
})
") #}
						
				{% elseif element.type=='currency' %}
					{{ this.registerPackage('currency', {'isAjax' : isAjax}) }}
					<div class="input-prepend">
						<span class="add-on">{{ format.currencySymbolHtml() |raw }}</span>
						<input id="{{ p }}{{ key }}" name="{{ form.model }}[{{key}}]" type="text" class="input-currency span6" value="{{ this.model.__get(key) }}" {% if fields | length > 1 %} placeholder="{% if element.label %}{{ element.label}}{% else %}{{ this.model.attributeLabel(key) }}{% endif %}"{% endif %} maxlength="{{element.maxLength}} | default(255)" style="text-align: right;" /> 					
					</div>	
				{% elseif element.type=='button' %}
					<span id="{{ p }}{{ key }}" class="btn {{element.style}}"{{element.popover|raw}}>{{element.caption}}</span>

{{ this.onReady(
"$('#"~ p ~ key~"').click(function() {
	"~ element.script ~"
});") }}
{% if element.popover %}
	{{ this.onReady("$('#"~ p ~ key~"').popover({trigger:'hover'});") }}
{% endif %}
				{% elseif element.type=="dialog" %}
				<a data-target="#id-modal" role="button" class="btn {{ element.style }}" data-toggle="modal" href="#" data-remote="{{ element.remote }}"  >{{ element.caption | default('click')}}</a>
				{% else %}	
					<input id="{{ p }}{{ key }}" name="{{ form.model }}[{{key}}]" type="text" class="{{ width }} form-control" value="{{ this.model.__get(key) }}" {% if fields | length > 1 %} placeholder="{% if element.label %}{{ element.label}}{% else %}{{ this.model.attributeLabel(key) }}{% endif %}"{% endif %} maxlength="{{element.maxLength}} | default(255)"/> 
				{% endif %}
				
				{% if element.width %}
					</div>
				</div>	
				{% endif %}
					
			  {% endfor %}	
			</div>	
			
			
		</div>
		{% endif %}
		{% endfor %}	
		{#	
		<div class="form-actions form-group">					
			<div class="col-lg-2"></div>
			<div class="col-lg-10">
			{% for key, element in form.buttons %}					
			{% if element.type == 'submit' %}	
				<button class="btn {{ element.style }}" type="submit">{% if element.label %}{{element.label}}{%else%}{% if this.model.isNewRecord %}{{ this.t('btn-create') }} {% else %}{{ this.t('btn-save') }} {% endif %}{% endif %}</button>
			{% elseif element.type == 'cancel' %}	
				{% if sub.isAjax %}
				<span href="#" id="btn-cancel" class="btn {{ element.style }}" type="button">{{ this.t('btn-cancel') }}</span>											
				{% else %}
				<input class="btn {{ element.style }}" type="button" value="{{ this.t('btn-cancel') }}"  onClick="history.go(-1);return true;">							
				{% endif %}
			{% elseif element.type == 'delete' %}	
				<input class="btn {{ element.style }}" type="button" value="{{ this.t('btn-delete') }}"  onClick="if (confirm('{{ (element.ask) | default('Delete this information?') }}')) { window.location='{{ this.createUrl( element.action|default('delete'), {'id' : this.model.attribute(element.id | default('id'))} ) }}'; };">							
			{% elseif element.type == 'link' %}
				<br/><br /><a href="{{element.url}}">{{element.label}}</a>
			{% else %}	
				<input class="btn {{ element.style }}" type="button" value="{{ element.label }}"  onClick="{{ element.javascript }}">							
			{% endif %}
			{% endfor %}
			</div>	
		</div>
	#}
	</fieldset>
</form>
{{ this.onReady('$(".showtip").tooltip();') }}

{% if sub.isAjax or form.script %}
<script type="text/javascript">
{% if sub.isAjax %}	
	
	{{ this.registerPackage('ajaxForm', {'isAjax' : true,'executeAfterLoad' : 
"	var options = {
		target : '"~form.refreshDiv | default('#'~sub.slaveFrame)~"',
		success : processResponse
	};
	$('#"~form.id~"').ajaxForm(options);		
	function processResponse(responseText, statusText, xhr, $form) {
	if (responseText == 'ok') {/* ok: load information in a div */
		$('"~form.refreshDiv | default('#'~sub.masterFrame)~"').load('/* this is an error: sub.onRefreshUrl */');
	} else	if (responseText == 'url') {/* ok, but open an other page */
		window.location = '"~ sub.refreshUrl ~"';
	}	else {
		$('"~ form.refreshDiv | default('#'~sub.slaveFrame) ~"').html(responseText);
	}
};
"}) }}

{#	
	{% for script in this.packageScripts('ajaxForm') %}
		$.getScript("{{ script}}", function(data, textState) {
			var options = {
				target : '{{ form.refreshDiv | default('#'~sub.slaveFrame) }}',
				success : processResponse
			};
		$('#{{ form.id |default(p~'form')}}').ajaxForm(options);		
			
		});
	{% endfor %}	
	
	$().ready(function() {
		$('#btn-cancel').click(function() {
			$('{{ form.refreshDiv | default('#'~sub.masterFrame) }}').load('{{ sub.onRefreshUrl }}');
		});
	});
	
	
	function processResponse(responseText, statusText, xhr, $form) {

		if (responseText == 'ok') {/* ok: load information in a div */
			$('{{ form.refreshDiv | default('#'~sub.masterFrame) }}').load('{{ sub.onRefreshUrl }}');
		} else	if (responseText == 'url') {/* ok, but open an other page */
			window.location = "{{ sub.refreshUrl }}";
		}	else {
			$('{{ form.refreshDiv | default('#'~sub.slaveFrame) }}').html(responseText);
		}
	};
#}	
{% endif %}

</script>	
{% endif %}

{% if form.onReady %}
	{{ this.onReady(form.onReady) }}
{% endif %}	

{% if form.script %}
	{{ this.registerScript('main-script', form.script) }}
{% endif %}
